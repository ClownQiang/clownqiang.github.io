<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | ClownQiang的日常]]></title>
  <link href="http://ClownQiang.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://ClownQiang.github.io/"/>
  <updated>2016-08-15T13:33:51+08:00</updated>
  <id>http://ClownQiang.github.io/</id>
  <author>
    <name><![CDATA[ClownQiang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[偶遇惊天大Bug]]></title>
    <link href="http://ClownQiang.github.io/blog/2015/10/12/oh_bugs/"/>
    <updated>2015-10-12T00:00:00+08:00</updated>
    <id>http://ClownQiang.github.io/blog/2015/10/12/oh_bugs</id>
    <content type="html"><![CDATA[<hr />

<p>这段时间开始尝试使用okhttp，然而不是很顺利遇到了问题，之前一直吧返回来的Response直接在主线程进行解析response.body.string，就这样一个简单的操作一直折腾了我半天，后来在stackoverflow上面才发现原来，这个东西居然是有网络请求的，卧槽，卧槽，卧槽，重要的事情说三遍~~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionBar中Menu隐藏后Item无法显示Icon]]></title>
    <link href="http://ClownQiang.github.io/blog/2015/08/10/actionbar_menu_item_not_show_icon/"/>
    <updated>2015-08-10T00:00:00+08:00</updated>
    <id>http://ClownQiang.github.io/blog/2015/08/10/actionbar_menu_item_not_show_icon</id>
    <content type="html"><![CDATA[<hr />

<p>官方中ActionBar如果你隐藏了Menu Item，默认是不会显示Icon。虽然官方不支持，但是有时会使用到相关的效果，所以经过无数次的Google，终于找到了需要的方法和信息。</p>

<p>这个是在CSDN中<a href="http://my.csdn.net/sinyu890807">guolin</a>博主发现的方法，是利用反射来完成的，具体博客地址在<a href="http://blog.csdn.net/guolin_blog/article/details/18234477">这里</a>
<code>
@Override  
public boolean onMenuOpened(int featureId, Menu menu) {  
    if (featureId == Window.FEATURE_ACTION_BAR &amp;&amp; menu != null) {  
        if (menu.getClass().getSimpleName().equals("MenuBuilder")) {  
            try {  
                Method m = menu.getClass().getDeclaredMethod("setOptionalIconsVisible", Boolean.TYPE);  
                m.setAccessible(true);  
                m.invoke(menu, true);  
            } catch (Exception e) {  
            }  
        }  
    }  
    return super.onMenuOpened(featureId, menu);  
} 
</code></p>

<p><strong>但是，但是，但是（重要的事情说三遍）如果你是使用的AppCompactActivity，这里的onMenuOpen可能就不会调用了，至少对于我是这样的</strong></p>

<p>接下来我在stackoverflow上面发现另外的一种解决方法，同样是使用反射来达成效果，但是调用的地方不一样，<strong>如果你是用的是AppCompactActivity</strong>，可以使用下面的方法</p>

<p>```
@Override
protected boolean onPrepareOptionsPanel(View view, Menu menu) {</p>

<pre><code>if (menu != null) {       
    if (menu.getClass().getSimpleName().equals("MenuBuilder")) {                                       
        try{
            Method m = menu.getClass().getDeclaredMethod("setOptionalIconsVisible", Boolean.TYPE);                
            m.setAccessible(true);                
            m.invoke(menu, true);            
        } catch (Exception e) {                
        Log.e(getClass().getSimpleName(), "onMenuOpened...unable to set icons for overflow menu", e);           
        }
    }    
} 
</code></pre>

<p>   return super.onPrepareOptionsPanel(view, menu);
}
```</p>

<p>写下来给那些踩到坑的人~~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[“何书还”之二（关于Animation使用）]]></title>
    <link href="http://ClownQiang.github.io/blog/2014/12/28/he_shu_huan_Num_Two_Animation/"/>
    <updated>2014-12-28T00:00:00+08:00</updated>
    <id>http://ClownQiang.github.io/blog/2014/12/28/he_shu_huan_Num_Two_Animation</id>
    <content type="html"><![CDATA[<hr />

<p><a href="http://developer.android.com/training/material/animations.html">官方介绍Animation使用</a></p>

<p>我看了一下官方文档，但是无奈我的理解能力不够好，跑了好多次还是看不见炫酷的动画效果，无奈只好去翻阅官方demo的源码，终于知道了怎么使用。</p>

<h4>Touch Feedback（触摸反馈）</h4>

<p>在XML文件中添加以下代码可以添加触摸反馈的动画效果（类似于涟漪的效果）
&ndash; <em>?android:attr/selectableItemBackground</em>（有边界，可以使用在listview的item上）
&ndash; <em>?android:attr/selectableItemBackgroundBorderless</em>（没有边界，或者直接看是看不到明显的边界，但是点击是有涟漪效果）
<strong>需要说明<em>android:attr/selectableItemBackgroundBorderless</em>是API 21新增加的</strong></p>

<h4>Circular Reveal</h4>

<p>这个主要是提供一个圆形的显示或者隐藏的动画效果，主要使用的api是<a href="http://developer.android.com/reference/android/view/ViewAnimationUtils.html#createCircularReveal(android.view.View,%20int,%20int,%20float,%20float">ViewAnimationUtils.createCircularReveal()</a>
```
// previously invisible view
View myView = findViewById(R.id.my_view);</p>

<p>// get the center for the clipping circle
int cx = (myView.getLeft() + myView.getRight()) / 2;
int cy = (myView.getTop() + myView.getBottom()) / 2;</p>

<p>// get the final radius for the clipping circle
int finalRadius = Math.max(myView.getWidth(), myView.getHeight());</p>

<p>// create the animator for this view (the start radius is zero)
Animator anim =</p>

<pre><code>ViewAnimationUtils.createCircularReveal(myView, cx, cy, 0, finalRadius);
</code></pre>

<p>// make the view visible and start the animation
myView.setVisibility(View.VISIBLE);
anim.start();
```
里面几个参数的意思分别为：
&ndash; myView 要展示动画效果的视图
&ndash; cx  动画开始的X坐标
&ndash; cy 动画开始的Y坐标
&ndash; startRadius 动画开始的角度
&ndash; finalRadius 动画结束的角度</p>

<h4>Activity Transitions</h4>

<p>关于这个我就不多写了，博主大苞米对于这个写的十分详细，给大家附上链接自己<a href="http://blog.csdn.net/a396901990/article/details/40187203">看一下</a>,我就Activity之间的视图共享写一下，因为我在这个地方花了一些时间，所以记下来以备后面忘记。</p>

<p>首先需要在XML文件中你需要共享的View定义一个<code>android:transitionName</code></p>

<p>```
&lt;ImageView</p>

<pre><code>            android:id="@+id/bookPage"
            android:layout_width="match_parent"
            android:layout_height="400dp"
            android:scaleType="centerCrop"
            android:tint="@color/photo_tint"
            android:transitionName="bookPage" /&gt;
</code></pre>

<p>```
然后可以定义动画效果：</p>

<p><strong>1.可以在style文件中定义</strong>
<code>
&lt;item name="android:windowContentTransitions"&gt;true&lt;/item&gt;  
&lt;item name="android:windowEnterTransition"&gt;@transition/explode&lt;/item&gt;  
&lt;item name="android:windowExitTransition"&gt;@transition/explode&lt;/item&gt;
</code></p>

<p><strong>2.可以在java文件中定义</strong>
<code>
getWindow().requestFeature(Window.FEATURE_CONTENT_TRANSITIONS);  
getWindow().setExitTransition(new Explode());  
</code></p>

<p>然后在使用Intent跳转的时候，加入ActivityOptions
```
Intent intent = new Intent(this, Activity2.class);<br/>
// shareView: 需要共享的视图<br/>
// bookPage就是刚刚 transitionName所写的值
ActivityOptions options = ActivityOptions</p>

<pre><code>    .makeSceneTransitionAnimation(this, shareView, "bookPage");  
</code></pre>

<p>startActivity(intent, options.toBundle());
```</p>

<p>对于一次共享多个View的需要使用Pair.create(view,&ldquo;shareName&rdquo;)，这里必须是View。</p>

<p>关于结束Activity时同样动画效果倒回可以使用Activity.finishAfterTransition()。</p>

<h4>添加TranstionListener</h4>

<p>同样你可以在进入动画时候添加动画监听器，这样你就可以在本页面加载更多的动画效果
```
getWindow().getEnterTransition().addListener(new TransitionAdapter() {</p>

<pre><code>            @TargetApi(Build.VERSION_CODES.LOLLIPOP)
            @Override
            public void onTransitionEnd(Transition transition) {
                ObjectAnimator color = ObjectAnimator.ofArgb(bookPage.getDrawable(), "tint",
                        getResources().getColor(R.color.photo_tint), 0);
                color.start();
                renewButton.animate().scaleX(1.0f);
                renewButton.animate().scaleY(1.0f);
                renewButton.animate().alpha(1.0f);
                getWindow().getEnterTransition().removeListener(this);
            }
        });
</code></pre>

<p>```</p>

<p>关闭Activity时同样可以使用，需要重写onBackPressed()方法：
```
@Override</p>

<pre><code>public void onBackPressed() {
    super.onBackPressed();
    if (Build.VERSION.SDK_INT == 21) {
        ObjectAnimator color = ObjectAnimator.ofArgb(bookPage.getDrawable(), "tint",
                0, getResources().getColor(R.color.photo_tint));
        color.addListener(new AnimatorListenerAdapter() {
            @Override
            public void onAnimationEnd(Animator animation) {
                finishAfterTransition();
            }
        });
        color.start();
        renewButton.animate().scaleX(0.0f);
        renewButton.animate().scaleY(0.0f);
        renewButton.animate().alpha(0.0f);
        finishAfterTransition();
    }
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[“何书还”之一（Material Design小试）]]></title>
    <link href="http://ClownQiang.github.io/blog/2014/12/27/he_shu_huan_Num_One/"/>
    <updated>2014-12-27T00:00:00+08:00</updated>
    <id>http://ClownQiang.github.io/blog/2014/12/27/he_shu_huan_Num_One</id>
    <content type="html"><![CDATA[<hr />

<p>很长一段时间没有写过文章了，这次赶上学校办的“手机应用开发大赛”，做了一个小小的App，带着尝试一下的心态，我选择了Google最新的Material Design，无奈能找到的资料太少，花了一段时间去网上淘各种资料，这里我就这个App做一下总结。</p>

<p>先上一些找到的资料：</p>

<p><a href="http://developer.android.com/training/material/theme.html">Material Design</a>官方介绍，英文和理解能力够好，直接看官方文档</p>

<p><a href="http://blog.isming.me/">博主Sam</a>作为一个吃螃蟹的人，也做了一些对于Material Design的尝试，也写了一些文章，大家也可以去看看。</p>

<p><a href="http://blog.csdn.net/a396901990/article/details/40107881">csdn博主大苞米</a>同样也写了一些关于Material Design的文章</p>

<p><a href="https://github.com/lightSky/MaterialDesignCenter">MaterialDesignCenter</a> 这个整理的很完善，这里就不在分开上链接。</p>

<p><a href="https://github.com/1019439568/MMLibrary">何书还</a> 是我写的一个图书馆查询工具App，也尝试了Material Design</p>

<p>具体详细信息，大家可以上<a href="https://github.com/lightSky/MaterialDesignCenter">MaterialDesignCenter</a> 中看看其他人时怎么做的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AndroidStudio坑爹错误之一]]></title>
    <link href="http://ClownQiang.github.io/blog/2014/12/26/Android_Studio_Bug_Num_One/"/>
    <updated>2014-12-26T00:00:00+08:00</updated>
    <id>http://ClownQiang.github.io/blog/2014/12/26/Android_Studio_Bug_Num_One</id>
    <content type="html"><![CDATA[<hr />

<p>前段时间被这个坑爹错误折腾了好长时间，废话不多说直接把它拉出来枪毙~~~~</p>

<h3>错误信息</h3>

<p><code>
UNEXPECTED TOP-LEVEL EXCEPTION:
com.android.dx.cf.iface.ParseException: class name (com/companyname/UI/BuildConfig) does not match path (com/companyname/ui/BuildConfig.class) at
</code></p>

<h3>解决方案</h3>

<ul>
<li>AndroidStudio clean项目，rebuild项目</li>
</ul>


<p>你没有看错就是这么简单，但是你可能在logcat里面看到其他信息，比如这个：</p>

<p><code>
UNEXPECTED TOP-LEVEL EXCEPTION
</code>
如果你将这个信息Google一下，就会发现，有各种各样的方案，比如说有重复编译jar包等等，我们不排除有这个可能。</p>

<p>所以如果碰上上面的问题，可以先clean，rebuild的尝试一下先~~~</p>
]]></content>
  </entry>
  
</feed>
